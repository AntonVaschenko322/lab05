name: CMake with Coveralls

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  BUILD_TYPE: Debug  # Изменено на Debug для coverage
  COVERAGE_NAME: coverage.info

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          lcov \
          python3-pip
        pip install coveralls gcovr

    - name: Configure CMake
      run: |
        cmake -B ${{github.workspace}}/build \
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -DBUILD_TESTING=ON

    - name: Build
      run: |
        cmake --build ${{github.workspace}}/build \
          --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: |
        ctest -C ${{env.BUILD_TYPE}} --output-on-failure

    - name: Generate coverage data
      working-directory: ${{github.workspace}}/build
      run: |
        lcov --capture --directory . --output-file ${{env.COVERAGE_NAME}}
        lcov --remove ${{env.COVERAGE_NAME}} \
          '/usr/*' \
          '*/tests/*' \
          '*/third_party/*' \
          -o ${{env.COVERAGE_NAME}}

    - name: Upload to Coveralls
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALS_REPO_TOKEN }}
      working-directory: ${{github.workspace}}/build
      run: |
        coveralls --gcov-options '\-lp' -i ${{env.COVERAGE_NAME}}

    - name: Upload coverage report artifact
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: ${{github.workspace}}/build/coverage_report
